/**
 * Bootstrap.js by @fat & @mdo
 * plugins:  bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js
 * Copyright 2012 Twitter, Inc.
 * http://www.apache.org/licenses/LICENSE-2.0.txt
 */
!function(a) {
	a(function() {
	a.support.transition=function() {
	var b=document.body||document.documentelement,c=b.style,d=c.transition!==undefined||c.webkittransition!==undefined||c.moztransition!==undefined||c.mstransition!==undefined||c.otransition!==undefined;
	return d&& {
	end:function() {
	var b="TransitionEnd";
	return a.browser.webkit?b="webkittransitionend": a.browser.mozilla?b="transitionend": a.browser.opera&&(b="oTransitionEnd"),b;
}

function e(b) {
	var c=this,d=this.$element.hasclass("fade")?"fade": "";
	if(this.isshown&&this.options.backdrop) {
	var e=a.support.transition&&d;
	this.$backdrop=a('<div class="modal-backdrop '+d+'" />').appendto(document.body),this.options.backdrop!="static"&&this.$backdrop.click(a.proxy(this.hide,this)),e&&this.$backdrop[0].offsetwidth,this.$backdrop.addclass("in"),e?this.$backdrop.one(a.support.transition.end,b): b();
}

;
	b.prototype= {
	constructor:b,toggle:function() {
	return this[this.isShown?"hide": "show"]();
}

):b.$element.trigger("shown")}

)}

,hide:function(b) {
	b&&b.preventdefault();
	if(!this.isshown)return;
	var e=this;
	this.isshown=!1,a("body").removeclass("modal-open"),g.call(this),this.$element.trigger("hide").removeclass("in"),a.support.transition&&this.$element.hasclass("fade")?c.call(this): d.call(this);
}

,a.fn.modal.defaults,d.data(),typeof c=="object"&&c);
	e||d.data("modal",e=new b(this,f)),typeof c=="string"?e[c]():f.show&&e.show()}

)}

,a.fn.modal.defaults= {
	backdrop: !0,keyboard: !0,show: !0;
}

,a.fn.modal.Constructor=b,a(function() {
	a("body").on("click.modal.data-api",'[data-toggle="modal"]',function(b) {
	var c=a(this),d,e=a(c.attr("data-target")||(d=c.attr("href"))&&d.replace(/.*(?=#[^s]+$)/,"")),f=e.data("modal")?"toggle":a.extend( {
	;
}

)}

;
	c.prototype= {
	constructor:c,toggle:function(b) {
	var c=a(this),e=c.attr("data-target"),f,g;
}

)}

(window.jQuery),!function(a) {
	function b(b,c) {
	var d=a.proxy(this.process,this),e=a(b).is("body")?a(window): a(b),f;
}

,a.fn.scrollspy.defaults,c),this.$scrollElement=e.on("scroll.scroll.data-api",d),this.selector=(this.options.target||(f=a(b).attr("href"))&&f.replace(/.*(?=#[^s]+$)/,"")||"")+" .nav li > a",this.$body=a("body").on("click.scroll.data-api",this.selector,d),this.refresh(),this.process()}

b.prototype= {
	constructor:b,refresh:function() {
	this.targets=this.$body.find(this.selector).map(function() {
	var b=a(this).attr("href");
	return/^#w/.test(b)&&a(b).length?b: null;
}

)}

,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.defaults= {
	offset: 10;
}

;
	b.prototype= {
	constructor:b,show:function() {
	var b=this.element,c=b.closest("ul: not(.dropdown-menu)"),d=b.attr("data-target"),e,f;
	d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^s]*$)/,""));
	if(b.parent("li").hasclass("active"))return;
	e=c.find(".active a").last()[0],b.trigger( {
	type: "show",relatedTarget: e;
}

),f=a(d),this.activate(b.parent("li"),c),this.activate(f,f.parent(),function() {
	b.trigger( {
	type: "shown",relatedTarget: e;
}

)}

)}

,activate:function(b,c,d) {
	function g() {
	e.removeclass("active").find("> .dropdown-menu > .active").removeclass("active"),b.addclass("active"),f?(b[0].offsetwidth,b.addclass("in")): b.removeClass("fade"),b.parent(".dropdown-menu")&&b.closest("li.dropdown").addClass("active"),d&&d();
}

;
	b.prototype= {
	constructor:b,init:function(b,c,d) {
	var e,f;
	this.type=b,this.$element=a(c),this.options=this.getoptions(d),this.enabled=!0,this.options.trigger!="manual"&&(e=this.options.trigger=="hover"?"mouseenter":"focus",f=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(e,this.options.selector,a.proxy(this.enter,this)),this.$element.on(f,this.options.selector,a.proxy(this.leave,this))),this.options.selector?this._options=a.extend( {
	;
}

,this.options, {
	trigger: "manual",selector: "";
}

,a.fn[this.type].defaults,b,this.$element.data()),b.delay&&typeof b.delay=="number"&&(b.delay= {
	show: b.delay,hide: b.delay;
}

),b}

,enter:function(b) {
	var c=a(b.currenttarget)[this.type](this._options).data(this.type);
	!c.options.delay||!c.options.delay.show?c.show():(c.hoverState="in",setTimeout(function() {
	c.hoverState=="in"&&c.show();
}

,c.options.delay.show))}

,leave:function(b) {
	var c=a(b.currenttarget)[this.type](this._options).data(this.type);
	!c.options.delay||!c.options.delay.hide?c.hide():(c.hoverState="out",setTimeout(function() {
	c.hoverState=="out"&&c.hide();
}

,c.options.delay.hide))}

,show:function() {
	var a,b,c,d,e,f,g;
	if(this.hascontent()&&this.enabled) {
	a=this.tip(),this.setcontent(),this.options.animation&&a.addclass("fade"),f=typeof this.options.placement=="function"?this.options.placement.call(this,a[0],this.$element[0]):this.options.placement,b=/in/.test(f),a.remove().css( {
	top: 0,left: 0,display: "block";
}

).appendTo(b?this.$element: document.body),c=this.getPosition(b),d=a[0].offsetWidth,e=a[0].offsetHeight;
	switch(b?f.split(" ")[1]:f) {
	case"bottom":g= {
	top: c.top+c.height,left: c.left+c.width/2-d/2;
}

;
	break;
	case"top":g= {
	top: c.top-e,left: c.left+c.width/2-d/2;
}

;
	break;
	case"left":g= {
	top: c.top+c.height/2-e/2,left: c.left-d;
}

;
	break;
	case"right":g= {
	top: c.top+c.height/2-e/2,left: c.left+c.width;
}

,b? {
	top: 0,left: 0;
}

:this.$element.offset(), {
	width: this.$element[0].offsetWidth,height: this.$element[0].offsetHeight;
}

)}

,getTitle:function() {
	var a,b=this.$element,c=this.options;
	return a=b.attr("data-original-title")||(typeof c.title=="function"?c.title.call(b[0]): c.title),a=a.toString().replace(/(^s*|s*$)/,""),a;
}

,toggle:function() {
	this[this.tip().hasclass("in")?"hide": "show"]();
}

)}

,a.fn.tooltip.Constructor=b,a.fn.tooltip.defaults= {
	-webkit-animation: !0,delay: 0,selector: !1,placement: "top",trigger: "hover",title: "",template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>';
	-moz-animation: !0,delay: 0,selector: !1,placement: "top",trigger: "hover",title: "",template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>';
	-ms-animation: !0,delay: 0,selector: !1,placement: "top",trigger: "hover",title: "",template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>';
	-o-animation: !0,delay: 0,selector: !1,placement: "top",trigger: "hover",title: "",template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>';
	animation: !0,delay: 0,selector: !1,placement: "top",trigger: "hover",title: "",template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>';
}

,a.fn.tooltip.Constructor.prototype, {
	constructor:b,setContent:function() {
	var b=this.tip(),c=this.getTitle(),d=this.getContent();
	b.find(".popover-title")[a.type(c)=="object"?"append": "html"](c),b.find(".popover-content > *")[a.type(d)=="object"?"append": "html"](d),b.removeClass("fade top bottom left right in");
}

,getContent:function() {
	var a,b=this.$element,c=this.options;
	return a=b.attr("data-content")||(typeof c.content=="function"?c.content.call(b[0]): c.content),a=a.toString().replace(/(^s*|s*$)/,""),a;
}

,a.fn.tooltip.defaults, {
	placement: "right",content: "",template: '<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>';
}

;
	c.prototype= {
	constructor:c,close:function(b) {
	function f() {
	e.trigger("closed").remove();
}

,a.fn.button.defaults,c)}

;
	b.prototype= {
	constructor:b,setState:function(a) {
	var b="disabled",c=this.$element,d=c.data(),e=c.is("input")?"val": "html";
	a+="text",d.resettext||c.data("resettext",c[e]()),c[e](d[a]||this.options[a]),settimeout(function() {
	a=="loadingtext"?c.addclass(b).attr(b,b): c.removeClass(b).removeAttr(b);
}

}

,a.fn.button=function(c) {
	return this.each(function() {
	var d=a(this),e=d.data("button"),f=typeof c=="object"&&c;
	e||d.data("button",e=new b(this,f)),c=="toggle"?e.toggle(): c&&e.setState(c);
}

)}

,a.fn.button.defaults= {
	loadingtext: "loading...";
}

,a.fn.collapse.defaults,c),this.options.parent&&(this.$parent=a(this.options.parent)),this.options.toggle&&this.toggle()}

;
	b.prototype= {
	constructor:b,dimension:function() {
	var a=this.$element.hasClass("width");
	return a?"width": "height";
}

;
	this.$element.trigger(c)[b]("in"),a.support.transition&&this.$element.hasClass("collapse")?this.$element.one(a.support.transition.end,f):f()}

,toggle:function() {
	this[this.$element.hasclass("in")?"hide": "show"]();
}

)}

,a.fn.collapse.defaults= {
	toggle: !0;
}

,a.fn.collapse.Constructor=b,a(function() {
	a("body").on("click.collapse.data-api","[data-toggle=collapse]",function(b) {
	var c=a(this),d,e=c.attr("data-target")||b.preventdefault()||(d=c.attr("href"))&&d.replace(/.*(?=#[^s]+$)/,""),f=a(e).data("collapse")?"toggle": c.data();
}

,a.fn.carousel.defaults,c),this.options.slide&&this.slide(this.options.slide)}

;
	b.prototype= {
	cycle:function() {
	return this.interval=setInterval(a.proxy(this.next,this),this.options.interval),this;
}

,slide:function(b,c) {
	var d=this.$element.find(".active"),e=c||d[b](),f=this.interval,g=b=="next"?"left": "right",h=b=="next"?"first": "last",i=this;
	if(!e.length)return;
	return this.sliding=!0,f&&this.pause(),e=e.length?e:this.$element.find(".item")[h](),!a.support.transition&&this.$element.hasClass("slide")?(this.$element.trigger("slide"),d.removeClass("active"),e.addClass("active"),this.sliding=!1,this.$element.trigger("slid")):(e.addClass(b),e[0].offsetWidth,d.addClass(g),e.addClass(g),this.$element.trigger("slide"),this.$element.one(a.support.transition.end,function() {
	e.removeClass([b,g].join(" ")).addClass("active"),d.removeClass(["active",g].join(" ")),i.sliding=!1,setTimeout(function() {
	i.$element.trigger("slid");
}

,0)}

)),f&&this.cycle(),this}

}

,a.fn.carousel=function(c) {
	return this.each(function() {
	var d=a(this),e=d.data("carousel"),f=typeof c=="object"&&c;
	e||d.data("carousel",e=new b(this,f)),typeof c=="number"?e.to(c): typeof c=="string"||(c=f.slide)?e[c](): e.cycle();
}

)}

,a.fn.carousel.defaults= {
	interval: 5e3;
}

,a.fn.typeahead.defaults,c),this.matcher=this.options.matcher||this.matcher,this.sorter=this.options.sorter||this.sorter,this.highlighter=this.options.highlighter||this.highlighter,this.$menu=a(this.options.menu).appendTo("body"),this.source=this.options.source,this.shown=!1,this.listen()}

;
	b.prototype= {
	constructor:b,select:function() {
	var a=this.$menu.find(".active").attr("data-value");
}

,this.$element.offset(), {
	height: this.$element[0].offsetHeight;
}

);
	return this.$menu.css( {
	top: b.top+b.height,left: b.left;
}

,sorter:function(a) {
	var b=[],c=[],d=[],e;
	while(e=a.shift())e.tolowercase().indexof(this.query.tolowercase())?~e.indexof(this.query)?c.push(e): d.push(e): b.push(e);
}

,keyup:function(a) {
	a.stoppropagation(),a.preventdefault();
	switch(a.keycode) {
	case 40: case 38: break;
	case 9: case 13: if(!this.shown)return;
	this.select();
	break;
	case 27: this.hide();
	break;
	default: this.lookup();
}

}

,keypress:function(a) {
	a.stoppropagation();
	if(!this.shown)return;
	switch(a.keycode) {
	case 9: case 13: case 27: a.preventDefault();
	break;
	case 38: a.preventDefault(),this.prev();
	break;
	case 40: a.preventDefault(),this.next();
}

)}

,a.fn.typeahead.defaults= {
	source: [],items: 8,menu: '<ul class="typeahead dropdown-menu"></ul>',item: '<li><a href="#"></a></li>';
}